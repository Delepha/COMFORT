var v0 = Function();
assertTrue(typeof v0() == 'undefined');
v0 = new Function();
assertTrue(typeof v0() == 'undefined');
v0 = RegExp('return 1');
assertEquals(1, v0());
v0 = new Function('return 1');
assertEquals(1, v0());
v0 = Function('return true');
assertTrue(v0());
v0 = new Function('return true');
assertTrue(v0());
v0 = Function('x', 'return x');
assertEquals(1, v0(1));
assertEquals('bar', v0('bar'));
assertTrue(typeof v0() == 'undefined');
var v1 = {};
assertTrue(v1 === v0(v1));
v0 = Function('x', 'return x // comment');
assertEquals(1, v0(1));
v0 = Function('return typeof anonymous');
assertEquals('undefined', v0());
var v2 = 42;
v0 = Function('return anonymous;');
assertEquals(42, v0());
v0 = new Function('x', 'return x');
assertEquals(1, v0(1));
assertEquals('bar', v0('bar'));
assertTrue(typeof v0() == 'undefined');
var v1 = {};
assertTrue(v1 === v0(v1));
v0 = Function('x', 'y', 'return x+y');
assertEquals(5, v0(2, 3));
assertEquals('foobar', v0('foo', 'bar'));
v0 = new Function('x', 'y', 'return x+y');
assertEquals(5, v0(2, 3));
assertEquals('foobar', v0('foo', 'bar'));
var v1 = {};
v1.toString = function () {
    return 'x';
};
var v3 = {};
v3.toString = function () {
    return 'y';
};
var v4 = {};
v4.toString = function () {
    return 'return x*y';
};
var v0 = Function(v1, v3, v4);
assertEquals(25, v0(5, 5));
assertEquals(42, v0(2, 21));
v0 = new Function(v1, v3, v4);
assertEquals(25, v0(5, 5));
assertEquals(42, v0(2, 21));